%p#notice= notice

%div
  %h2= @post.title
  - unless @post.published
    %span.published
      not published yet
  %p
    %strong=  @post.created_at.strftime("#{@post.created_at.day.ordinalize} %b %Y")
  %p!= @post.content
%div{:style=>'clear:both;'}
  = blink_to 'Edit', edit_post_path(@post)
  
  = blink_to 'Back',posts_path 

%br
#social_buttons{:style =>'display:block;'}  
  %span#pin-it
    = render :partial => "layouts/pinterest_widget"
  %span#tweet-it
    = render :partial => "layouts/twitter_button_widget"
  = render :partial => "layouts/facebook_like_widget"



- if current_admin
  - comments = Comment.where(:post_id => @post.id)
- else
  - comments = Comment.where(:post_id => @post.id).where(:published => true)

%p= pluralize comments.count, "comment"
- comments.each do |comment|
  .comment
    %p= comment.content    
    .comment_time
      %b= comment.name
      = time_ago_in_words comment.created_at
      ago
    .action_buttons
      - if current_admin
        = blink_to 'Edit', edit_comment_path(comment)
        = blink_to 'Publish', "/publish/comment/#{comment.id}" unless comment.published
        = blink_to 'Unpublish', "/unpublish/comment/#{comment.id}" if comment.published
        = blink_to 'Delete',"/posts/#{@post.id}/comments/#{comment.id}", :method => :delete, :data => { :confirm => 'Are you sure?' } 


%h3 Add a comment:
= form_for([@post, @post.comments.build]) do |f| 
  = f.hidden_field :post_id, :value => @post.id
  = f.text_area :content
  %br
  = f.label :name
  = f.text_field :name
  %br
  != recaptcha_tags
  = f.submit 'Submit Comment'
